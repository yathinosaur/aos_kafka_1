[2020-04-28 20:14:36,370] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:14:36,373] WARN config/zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:14:36,380] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:14:36,381] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:14:36,384] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:14:36,385] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:14:36,386] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:14:36,387] WARN Either no config or no quorum defined in config, running  in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
[2020-04-28 20:14:36,388] INFO Log4j found with jmx enabled. (org.apache.zookeeper.jmx.ManagedUtil)
[2020-04-28 20:14:36,404] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:14:36,405] WARN config/zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:14:36,406] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:14:36,407] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:14:36,409] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
[2020-04-28 20:14:36,412] INFO zookeeper.snapshot.trust.empty : false (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2020-04-28 20:14:36,421] INFO Server environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,422] INFO Server environment:host.name=Jarvis.localdomain (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,427] INFO Server environment:java.version=11.0.7 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,428] INFO Server environment:java.vendor=Ubuntu (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,428] INFO Server environment:java.home=/usr/lib/jvm/java-11-openjdk-amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,429] INFO Server environment:java.class.path=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/activation-1.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/aopalliance-repackaged-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-cli-1.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-basic-auth-extension-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-file-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-json-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-client-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-runtime-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-transforms-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-locator-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-core-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-databind-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-dataformat-csv-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-datatype-jdk8-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-base-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-json-provider-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-jaxb-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-paranamer-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-scala_2.12-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.activation-api-1.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.annotation-api-1.3.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.inject-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.ws.rs-api-2.1.5.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.xml.bind-api-2.3.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.26.0-GA.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-client-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-common-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-core-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-hk2-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-media-jaxb-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-server-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-client-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-continuation-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-http-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-io-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-security-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-server-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlet-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlets-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-util-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-clients-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-log4j-appender-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-examples-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-scala_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-test-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-tools-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0-sources.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/log4j-1.2.17.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/lz4-java-1.7.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/maven-artifact-3.6.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-buffer-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-codec-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-handler-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-resolver-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-epoll-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-unix-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/paranamer-2.8.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/plexus-utils-3.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/reflections-0.9.12.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/rocksdbjni-5.18.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-collection-compat_2.12-2.1.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-java8-compat_2.12-0.9.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-library-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-logging_2.12-3.9.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-reflect-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-api-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-log4j12-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/snappy-java-1.1.7.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/validation-api-2.0.1.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-jute-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zstd-jni-1.4.4-7.jar (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,432] INFO Server environment:java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,432] INFO Server environment:java.io.tmpdir=/tmp (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,433] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,434] INFO Server environment:os.name=Linux (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,434] INFO Server environment:os.arch=amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,435] INFO Server environment:os.version=4.4.0-18362-Microsoft (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,437] INFO Server environment:user.name=vision (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,438] INFO Server environment:user.home=/home/vision (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,439] INFO Server environment:user.dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,440] INFO Server environment:os.memory.free=494MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,440] INFO Server environment:os.memory.max=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,441] INFO Server environment:os.memory.total=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,443] INFO minSessionTimeout set to 6000 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,444] INFO maxSessionTimeout set to 60000 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,445] INFO Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000 datadir /tmp/zookeeper/version-2 snapdir /tmp/zookeeper/version-2 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:14:36,454] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
[2020-04-28 20:14:36,458] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 2 selector thread(s), 16 worker threads, and 64 kB direct buffers. (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2020-04-28 20:14:36,464] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2020-04-28 20:14:36,482] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
[2020-04-28 20:14:36,486] INFO Reading snapshot /tmp/zookeeper/version-2/snapshot.d9 (org.apache.zookeeper.server.persistence.FileSnap)
[2020-04-28 20:14:36,503] INFO Snapshotting: 0xe8 to /tmp/zookeeper/version-2/snapshot.e8 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2020-04-28 20:14:36,522] INFO Using checkIntervalMs=60000 maxPerMinute=10000 (org.apache.zookeeper.server.ContainerManager)
[2020-04-28 20:15:06,170] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2020-04-28 20:15:06,566] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2020-04-28 20:15:06,602] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:15:06,607] INFO starting (kafka.server.KafkaServer)
[2020-04-28 20:15:06,608] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2020-04-28 20:15:06,624] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:15:06,630] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,631] INFO Client environment:host.name=Jarvis.localdomain (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,631] INFO Client environment:java.version=11.0.7 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,631] INFO Client environment:java.vendor=Ubuntu (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,631] INFO Client environment:java.home=/usr/lib/jvm/java-11-openjdk-amd64 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,632] INFO Client environment:java.class.path=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/activation-1.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/aopalliance-repackaged-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-cli-1.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-basic-auth-extension-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-file-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-json-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-client-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-runtime-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-transforms-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-locator-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-core-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-databind-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-dataformat-csv-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-datatype-jdk8-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-base-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-json-provider-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-jaxb-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-paranamer-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-scala_2.12-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.activation-api-1.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.annotation-api-1.3.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.inject-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.ws.rs-api-2.1.5.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.xml.bind-api-2.3.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.26.0-GA.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-client-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-common-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-core-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-hk2-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-media-jaxb-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-server-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-client-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-continuation-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-http-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-io-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-security-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-server-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlet-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlets-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-util-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-clients-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-log4j-appender-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-examples-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-scala_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-test-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-tools-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0-sources.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/log4j-1.2.17.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/lz4-java-1.7.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/maven-artifact-3.6.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-buffer-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-codec-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-handler-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-resolver-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-epoll-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-unix-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/paranamer-2.8.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/plexus-utils-3.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/reflections-0.9.12.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/rocksdbjni-5.18.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-collection-compat_2.12-2.1.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-java8-compat_2.12-0.9.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-library-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-logging_2.12-3.9.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-reflect-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-api-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-log4j12-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/snappy-java-1.1.7.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/validation-api-2.0.1.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-jute-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,635] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,635] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,636] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,636] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,636] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,636] INFO Client environment:os.version=4.4.0-18362-Microsoft (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,637] INFO Client environment:user.name=vision (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,637] INFO Client environment:user.home=/home/vision (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,637] INFO Client environment:user.dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,637] INFO Client environment:os.memory.free=981MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,637] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,638] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,640] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@5c86dbc5 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:15:06,644] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2020-04-28 20:15:06,650] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:15:06,654] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:15:06,661] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:15:06,667] INFO Socket connection established, initiating session, client: /127.0.0.1:62101, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:15:06,677] INFO Creating new log file: log.e9 (org.apache.zookeeper.server.persistence.FileTxnLog)
[2020-04-28 20:15:06,691] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10000224b940000, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:15:06,695] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:15:06,945] INFO Cluster ID = P77QLy1wRv-mpoxsp8_sIg (kafka.server.KafkaServer)
[2020-04-28 20:15:06,996] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-04-28 20:15:07,018] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-04-28 20:15:07,057] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:15:07,057] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:15:07,059] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:15:07,094] INFO Loading logs. (kafka.log.LogManager)
[2020-04-28 20:15:07,153] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,156] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,183] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,190] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,190] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,192] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,198] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,199] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,201] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,207] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,208] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,210] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,214] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,215] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,217] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,222] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,222] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,224] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,229] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,229] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,231] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,238] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,238] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,246] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,250] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,250] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,252] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,257] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,258] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,259] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,263] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,263] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,266] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,270] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,270] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,272] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,277] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,277] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,279] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,283] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,283] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,287] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,290] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,291] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,293] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,298] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,298] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,300] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,303] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,305] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,307] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,311] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,311] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,313] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,318] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,318] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,320] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,324] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,326] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,328] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,331] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,331] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,333] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,339] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,339] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,341] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,344] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,346] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,348] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,351] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,351] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,353] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,359] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,359] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,361] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,364] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,366] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,368] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,372] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,372] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,374] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,379] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,380] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,382] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,385] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,386] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,389] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,392] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,392] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,395] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,399] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,399] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,401] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,405] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,406] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,408] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,411] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,412] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,413] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,418] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,419] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,421] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,424] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,426] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,428] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,431] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,431] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,433] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,439] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,440] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,441] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,445] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,445] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,447] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,450] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,450] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,452] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,456] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,457] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,459] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,462] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,463] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,464] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,470] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,470] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,472] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,475] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,477] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,479] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,482] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,482] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,484] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,489] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,489] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,491] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,494] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,495] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,496] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,500] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,500] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,502] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,506] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,507] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,509] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,512] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,512] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,514] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,518] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,518] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,521] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,524] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,524] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,527] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,530] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,530] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,532] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,535] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,537] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,539] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,543] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2020-04-28 20:15:07,543] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:15:07,545] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,549] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,551] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,552] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,554] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,557] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,559] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,561] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,562] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,564] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,567] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,568] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,570] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,572] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,574] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,577] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,578] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,580] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,581] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,583] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,584] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,589] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,590] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,592] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,593] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,595] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,598] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,600] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,602] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,604] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,608] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,610] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,612] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,614] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,617] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,619] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,621] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,622] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,624] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,625] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,628] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,630] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,631] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,633] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,634] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,637] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,639] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,641] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,642] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,644] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,645] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,648] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,649] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,651] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,653] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.LogSegment.recover(LogSegment.scala:380)
	at kafka.log.Log.recoverSegment(Log.scala:632)
	at kafka.log.Log.recoverLog(Log.scala:771)
	at kafka.log.Log.$anonfun$loadSegments$3(Log.scala:707)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2329)
	at kafka.log.Log.loadSegments(Log.scala:707)
	at kafka.log.Log.<init>(Log.scala:297)
	at kafka.log.Log$.apply(Log.scala:2463)
	at kafka.log.LogManager.loadLog(LogManager.scala:272)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:342)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:15:07,656] INFO Logs loading complete in 562 ms. (kafka.log.LogManager)
[2020-04-28 20:15:07,671] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2020-04-28 20:15:07,674] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2020-04-28 20:15:08,066] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2020-04-28 20:15:08,097] INFO [SocketServer brokerId=0] Created data-plane acceptor and processors for endpoint : EndPoint(null,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2020-04-28 20:15:08,099] INFO [SocketServer brokerId=0] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2020-04-28 20:15:08,116] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:15:08,116] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:15:08,117] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:15:08,118] INFO [ExpirationReaper-0-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:15:08,133] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:15:08,134] WARN [ReplicaManager broker=0] Stopping serving replicas in dir /tmp/kafka-logs (kafka.server.ReplicaManager)
[2020-04-28 20:15:08,143] WARN [ReplicaManager broker=0] Broker 0 stopped fetcher for partitions  and stopped moving logs for partitions  because they are in the failed log directory /tmp/kafka-logs. (kafka.server.ReplicaManager)
[2020-04-28 20:15:08,144] WARN Stopping serving logs in dir /tmp/kafka-logs (kafka.log.LogManager)
[2020-04-28 20:15:08,146] ERROR Shutdown broker because all log dirs in /tmp/kafka-logs have failed (kafka.log.LogManager)
[2020-04-28 20:15:08,489] WARN Unable to read additional data from client sessionid 0x10000224b940000, likely client has closed socket (org.apache.zookeeper.server.NIOServerCnxn)
[2020-04-28 20:15:26,939] INFO Expiring session 0x10000224b940000, timeout of 18000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:17:46,005] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2020-04-28 20:17:46,403] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2020-04-28 20:17:46,439] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:17:46,443] INFO starting (kafka.server.KafkaServer)
[2020-04-28 20:17:46,444] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2020-04-28 20:17:46,461] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:17:46,467] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,468] INFO Client environment:host.name=Jarvis.localdomain (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,468] INFO Client environment:java.version=11.0.7 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,468] INFO Client environment:java.vendor=Ubuntu (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,468] INFO Client environment:java.home=/usr/lib/jvm/java-11-openjdk-amd64 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,469] INFO Client environment:java.class.path=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/activation-1.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/aopalliance-repackaged-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-cli-1.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-basic-auth-extension-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-file-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-json-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-client-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-runtime-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-transforms-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-locator-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-core-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-databind-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-dataformat-csv-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-datatype-jdk8-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-base-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-json-provider-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-jaxb-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-paranamer-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-scala_2.12-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.activation-api-1.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.annotation-api-1.3.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.inject-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.ws.rs-api-2.1.5.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.xml.bind-api-2.3.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.26.0-GA.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-client-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-common-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-core-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-hk2-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-media-jaxb-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-server-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-client-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-continuation-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-http-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-io-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-security-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-server-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlet-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlets-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-util-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-clients-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-log4j-appender-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-examples-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-scala_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-test-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-tools-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0-sources.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/log4j-1.2.17.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/lz4-java-1.7.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/maven-artifact-3.6.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-buffer-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-codec-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-handler-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-resolver-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-epoll-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-unix-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/paranamer-2.8.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/plexus-utils-3.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/reflections-0.9.12.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/rocksdbjni-5.18.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-collection-compat_2.12-2.1.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-java8-compat_2.12-0.9.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-library-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-logging_2.12-3.9.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-reflect-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-api-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-log4j12-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/snappy-java-1.1.7.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/validation-api-2.0.1.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-jute-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,474] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,475] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,475] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,475] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,475] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,476] INFO Client environment:os.version=4.4.0-18362-Microsoft (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,476] INFO Client environment:user.name=vision (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,476] INFO Client environment:user.home=/home/vision (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,476] INFO Client environment:user.dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,476] INFO Client environment:os.memory.free=981MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,476] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,477] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,479] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@5c86dbc5 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:17:46,483] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2020-04-28 20:17:46,490] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:17:46,494] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:17:46,500] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:17:46,507] INFO Socket connection established, initiating session, client: /127.0.0.1:62108, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:17:46,518] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10000224b940001, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:17:46,521] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:17:46,734] INFO Cluster ID = P77QLy1wRv-mpoxsp8_sIg (kafka.server.KafkaServer)
[2020-04-28 20:17:46,738] WARN No meta.properties file under dir /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2020-04-28 20:17:46,786] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = ./tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-04-28 20:17:46,810] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = ./tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-04-28 20:17:46,850] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:17:46,850] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:17:46,853] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:17:46,882] INFO Log directory /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs not found, creating it. (kafka.log.LogManager)
[2020-04-28 20:17:46,890] INFO Loading logs. (kafka.log.LogManager)
[2020-04-28 20:17:46,898] INFO Logs loading complete in 8 ms. (kafka.log.LogManager)
[2020-04-28 20:17:46,912] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2020-04-28 20:17:46,914] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2020-04-28 20:17:47,342] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2020-04-28 20:17:47,374] INFO [SocketServer brokerId=0] Created data-plane acceptor and processors for endpoint : EndPoint(null,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2020-04-28 20:17:47,376] INFO [SocketServer brokerId=0] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2020-04-28 20:17:47,394] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:17:47,395] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:17:47,396] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:17:47,397] INFO [ExpirationReaper-0-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:17:47,412] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:17:47,457] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.zk.KafkaZkClient)
[2020-04-28 20:17:47,480] INFO Stat of the created znode at /brokers/ids/0 is: 262,262,1588119467471,1588119467471,1,0,0,72057741334806529,206,0,262
 (kafka.zk.KafkaZkClient)
[2020-04-28 20:17:47,482] INFO Registered broker 0 at path /brokers/ids/0 with addresses: ArrayBuffer(EndPoint(Jarvis.localdomain,9092,ListenerName(PLAINTEXT),PLAINTEXT)), czxid (broker epoch): 262 (kafka.zk.KafkaZkClient)
[2020-04-28 20:17:47,544] INFO [ExpirationReaper-0-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:17:47,549] INFO [ExpirationReaper-0-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:17:47,550] INFO [ExpirationReaper-0-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:17:47,591] INFO [GroupCoordinator 0]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2020-04-28 20:17:47,594] INFO [GroupCoordinator 0]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2020-04-28 20:17:47,599] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 5 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:47,610] INFO [ProducerId Manager 0]: Acquired new producerId block (brokerId:0,blockStartProducerId:1000,blockEndProducerId:1999) by writing to Zk with path version 2 (kafka.coordinator.transaction.ProducerIdManager)
[2020-04-28 20:17:47,642] INFO [TransactionCoordinator id=0] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-04-28 20:17:47,646] INFO [Transaction Marker Channel Manager 0]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-04-28 20:17:47,646] INFO [TransactionCoordinator id=0] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-04-28 20:17:47,671] INFO [ExpirationReaper-0-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:17:47,695] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-04-28 20:17:47,726] INFO [SocketServer brokerId=0] Started data-plane processors for 1 acceptors (kafka.network.SocketServer)
[2020-04-28 20:17:47,739] INFO Kafka version: 2.5.0 (org.apache.kafka.common.utils.AppInfoParser)
[2020-04-28 20:17:47,740] INFO Kafka commitId: 66563e712b0b9f84 (org.apache.kafka.common.utils.AppInfoParser)
[2020-04-28 20:17:47,740] INFO Kafka startTimeMs: 1588119467728 (org.apache.kafka.common.utils.AppInfoParser)
[2020-04-28 20:17:47,742] INFO [KafkaServer id=0] started (kafka.server.KafkaServer)
[2020-04-28 20:17:47,846] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set(streams-plaintext-input-0, __consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-8, __consumer_offsets-21, __consumer_offsets-4, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-46, streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, __consumer_offsets-25, __consumer_offsets-35, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-31, __consumer_offsets-36, __consumer_offsets-42, __consumer_offsets-3, __consumer_offsets-18, __consumer_offsets-37, __consumer_offsets-15, __consumer_offsets-24, __consumer_offsets-38, __consumer_offsets-17, __consumer_offsets-48, __consumer_offsets-19, __consumer_offsets-11, streams-wordcount-output-0, __consumer_offsets-13, __consumer_offsets-2, __consumer_offsets-43, __consumer_offsets-6, __consumer_offsets-14, streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-39, __consumer_offsets-12, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5, __consumer_offsets-26, __consumer_offsets-29, __consumer_offsets-34, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2020-04-28 20:17:47,914] INFO [Log partition=__consumer_offsets-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:47,921] INFO [Log partition=__consumer_offsets-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 37 ms (kafka.log.Log)
[2020-04-28 20:17:47,923] INFO Created log for partition __consumer_offsets-0 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-0 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:47,925] INFO [Partition __consumer_offsets-0 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition)
[2020-04-28 20:17:47,925] INFO [Partition __consumer_offsets-0 broker=0] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:47,927] INFO [Partition __consumer_offsets-0 broker=0] __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:47,946] INFO [Log partition=__consumer_offsets-29, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:47,948] INFO [Log partition=__consumer_offsets-29, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:47,948] INFO Created log for partition __consumer_offsets-29 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-29 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:47,949] INFO [Partition __consumer_offsets-29 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-29 (kafka.cluster.Partition)
[2020-04-28 20:17:47,949] INFO [Partition __consumer_offsets-29 broker=0] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:47,949] INFO [Partition __consumer_offsets-29 broker=0] __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:47,960] INFO [Log partition=__consumer_offsets-48, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:47,961] INFO [Log partition=__consumer_offsets-48, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:47,962] INFO Created log for partition __consumer_offsets-48 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-48 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:47,963] INFO [Partition __consumer_offsets-48 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-48 (kafka.cluster.Partition)
[2020-04-28 20:17:47,963] INFO [Partition __consumer_offsets-48 broker=0] Log loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:47,963] INFO [Partition __consumer_offsets-48 broker=0] __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:47,974] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:47,975] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:17:47,976] INFO Created log for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> delete, flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 52428800, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:47,976] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 broker=0] No checkpointed highwatermark is found for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 (kafka.cluster.Partition)
[2020-04-28 20:17:47,976] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 broker=0] Log loaded for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:47,977] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 broker=0] streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:47,986] INFO [Log partition=__consumer_offsets-10, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:47,988] INFO [Log partition=__consumer_offsets-10, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:17:47,989] INFO Created log for partition __consumer_offsets-10 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-10 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:47,990] INFO [Partition __consumer_offsets-10 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-10 (kafka.cluster.Partition)
[2020-04-28 20:17:47,990] INFO [Partition __consumer_offsets-10 broker=0] Log loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:47,990] INFO [Partition __consumer_offsets-10 broker=0] __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:47,999] INFO [Log partition=__consumer_offsets-45, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,000] INFO [Log partition=__consumer_offsets-45, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,001] INFO Created log for partition __consumer_offsets-45 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-45 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,001] INFO [Partition __consumer_offsets-45 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-45 (kafka.cluster.Partition)
[2020-04-28 20:17:48,001] INFO [Partition __consumer_offsets-45 broker=0] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,001] INFO [Partition __consumer_offsets-45 broker=0] __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,010] INFO [Log partition=__consumer_offsets-26, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,011] INFO [Log partition=__consumer_offsets-26, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,012] INFO Created log for partition __consumer_offsets-26 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-26 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,012] INFO [Partition __consumer_offsets-26 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-26 (kafka.cluster.Partition)
[2020-04-28 20:17:48,012] INFO [Partition __consumer_offsets-26 broker=0] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,012] INFO [Partition __consumer_offsets-26 broker=0] __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,022] INFO [Log partition=streams-wordcount-output-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,023] INFO [Log partition=streams-wordcount-output-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,025] INFO Created log for partition streams-wordcount-output-0 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/streams-wordcount-output-0 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,025] INFO [Partition streams-wordcount-output-0 broker=0] No checkpointed highwatermark is found for partition streams-wordcount-output-0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,025] INFO [Partition streams-wordcount-output-0 broker=0] Log loaded for partition streams-wordcount-output-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,025] INFO [Partition streams-wordcount-output-0 broker=0] streams-wordcount-output-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,034] INFO [Log partition=__consumer_offsets-7, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,035] INFO [Log partition=__consumer_offsets-7, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,036] INFO Created log for partition __consumer_offsets-7 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-7 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,037] INFO [Partition __consumer_offsets-7 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-7 (kafka.cluster.Partition)
[2020-04-28 20:17:48,037] INFO [Partition __consumer_offsets-7 broker=0] Log loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,037] INFO [Partition __consumer_offsets-7 broker=0] __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,047] INFO [Log partition=__consumer_offsets-42, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,048] INFO [Log partition=__consumer_offsets-42, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,049] INFO Created log for partition __consumer_offsets-42 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-42 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,050] INFO [Partition __consumer_offsets-42 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-42 (kafka.cluster.Partition)
[2020-04-28 20:17:48,050] INFO [Partition __consumer_offsets-42 broker=0] Log loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,050] INFO [Partition __consumer_offsets-42 broker=0] __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,060] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,061] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,061] INFO Created log for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,062] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 broker=0] No checkpointed highwatermark is found for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,062] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 broker=0] Log loaded for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,062] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 broker=0] streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,071] INFO [Log partition=__consumer_offsets-4, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,073] INFO [Log partition=__consumer_offsets-4, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,073] INFO Created log for partition __consumer_offsets-4 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-4 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,074] INFO [Partition __consumer_offsets-4 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-4 (kafka.cluster.Partition)
[2020-04-28 20:17:48,074] INFO [Partition __consumer_offsets-4 broker=0] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,074] INFO [Partition __consumer_offsets-4 broker=0] __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,083] INFO [Log partition=__consumer_offsets-23, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,084] INFO [Log partition=__consumer_offsets-23, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,085] INFO Created log for partition __consumer_offsets-23 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-23 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,086] INFO [Partition __consumer_offsets-23 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition)
[2020-04-28 20:17:48,086] INFO [Partition __consumer_offsets-23 broker=0] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,088] INFO [Partition __consumer_offsets-23 broker=0] __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,096] INFO [Log partition=__consumer_offsets-1, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,098] INFO [Log partition=__consumer_offsets-1, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,099] INFO Created log for partition __consumer_offsets-1 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-1 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,099] INFO [Partition __consumer_offsets-1 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-1 (kafka.cluster.Partition)
[2020-04-28 20:17:48,099] INFO [Partition __consumer_offsets-1 broker=0] Log loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,100] INFO [Partition __consumer_offsets-1 broker=0] __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,110] INFO [Log partition=__consumer_offsets-39, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,111] INFO [Log partition=__consumer_offsets-39, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,113] INFO Created log for partition __consumer_offsets-39 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-39 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,113] INFO [Partition __consumer_offsets-39 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-39 (kafka.cluster.Partition)
[2020-04-28 20:17:48,113] INFO [Partition __consumer_offsets-39 broker=0] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,114] INFO [Partition __consumer_offsets-39 broker=0] __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,126] INFO [Log partition=__consumer_offsets-20, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,127] INFO [Log partition=__consumer_offsets-20, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:17:48,128] INFO Created log for partition __consumer_offsets-20 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-20 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,128] INFO [Partition __consumer_offsets-20 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-20 (kafka.cluster.Partition)
[2020-04-28 20:17:48,129] INFO [Partition __consumer_offsets-20 broker=0] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,129] INFO [Partition __consumer_offsets-20 broker=0] __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,140] INFO [Log partition=__consumer_offsets-17, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,141] INFO [Log partition=__consumer_offsets-17, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:17:48,142] INFO Created log for partition __consumer_offsets-17 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-17 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,142] INFO [Partition __consumer_offsets-17 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition)
[2020-04-28 20:17:48,142] INFO [Partition __consumer_offsets-17 broker=0] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,143] INFO [Partition __consumer_offsets-17 broker=0] __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,151] INFO [Log partition=__consumer_offsets-36, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,152] INFO [Log partition=__consumer_offsets-36, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,153] INFO Created log for partition __consumer_offsets-36 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-36 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,154] INFO [Partition __consumer_offsets-36 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-36 (kafka.cluster.Partition)
[2020-04-28 20:17:48,154] INFO [Partition __consumer_offsets-36 broker=0] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,155] INFO [Partition __consumer_offsets-36 broker=0] __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,165] INFO [Log partition=__consumer_offsets-14, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,166] INFO [Log partition=__consumer_offsets-14, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,166] INFO Created log for partition __consumer_offsets-14 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-14 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,167] INFO [Partition __consumer_offsets-14 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-14 (kafka.cluster.Partition)
[2020-04-28 20:17:48,167] INFO [Partition __consumer_offsets-14 broker=0] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,168] INFO [Partition __consumer_offsets-14 broker=0] __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,177] INFO [Log partition=__consumer_offsets-33, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,178] INFO [Log partition=__consumer_offsets-33, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,179] INFO Created log for partition __consumer_offsets-33 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-33 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,179] INFO [Partition __consumer_offsets-33 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-33 (kafka.cluster.Partition)
[2020-04-28 20:17:48,179] INFO [Partition __consumer_offsets-33 broker=0] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,180] INFO [Partition __consumer_offsets-33 broker=0] __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,189] INFO [Log partition=__consumer_offsets-49, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,191] INFO [Log partition=__consumer_offsets-49, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:17:48,192] INFO Created log for partition __consumer_offsets-49 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-49 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,192] INFO [Partition __consumer_offsets-49 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-49 (kafka.cluster.Partition)
[2020-04-28 20:17:48,192] INFO [Partition __consumer_offsets-49 broker=0] Log loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,192] INFO [Partition __consumer_offsets-49 broker=0] __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,200] INFO [Log partition=__consumer_offsets-11, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,202] INFO [Log partition=__consumer_offsets-11, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,202] INFO Created log for partition __consumer_offsets-11 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-11 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,203] INFO [Partition __consumer_offsets-11 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-11 (kafka.cluster.Partition)
[2020-04-28 20:17:48,203] INFO [Partition __consumer_offsets-11 broker=0] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,203] INFO [Partition __consumer_offsets-11 broker=0] __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,212] INFO [Log partition=__consumer_offsets-30, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,213] INFO [Log partition=__consumer_offsets-30, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,213] INFO Created log for partition __consumer_offsets-30 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-30 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,214] INFO [Partition __consumer_offsets-30 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-30 (kafka.cluster.Partition)
[2020-04-28 20:17:48,214] INFO [Partition __consumer_offsets-30 broker=0] Log loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,214] INFO [Partition __consumer_offsets-30 broker=0] __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,224] INFO [Log partition=streams-plaintext-input-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,225] INFO [Log partition=streams-plaintext-input-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,225] INFO Created log for partition streams-plaintext-input-0 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/streams-plaintext-input-0 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,226] INFO [Partition streams-plaintext-input-0 broker=0] No checkpointed highwatermark is found for partition streams-plaintext-input-0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,226] INFO [Partition streams-plaintext-input-0 broker=0] Log loaded for partition streams-plaintext-input-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,226] INFO [Partition streams-plaintext-input-0 broker=0] streams-plaintext-input-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,234] INFO [Log partition=__consumer_offsets-46, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,235] INFO [Log partition=__consumer_offsets-46, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,236] INFO Created log for partition __consumer_offsets-46 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-46 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,236] INFO [Partition __consumer_offsets-46 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-46 (kafka.cluster.Partition)
[2020-04-28 20:17:48,236] INFO [Partition __consumer_offsets-46 broker=0] Log loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,237] INFO [Partition __consumer_offsets-46 broker=0] __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,245] INFO [Log partition=__consumer_offsets-27, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,247] INFO [Log partition=__consumer_offsets-27, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,247] INFO Created log for partition __consumer_offsets-27 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-27 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,248] INFO [Partition __consumer_offsets-27 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-27 (kafka.cluster.Partition)
[2020-04-28 20:17:48,248] INFO [Partition __consumer_offsets-27 broker=0] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,248] INFO [Partition __consumer_offsets-27 broker=0] __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,257] INFO [Log partition=__consumer_offsets-8, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,258] INFO [Log partition=__consumer_offsets-8, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,259] INFO Created log for partition __consumer_offsets-8 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-8 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,260] INFO [Partition __consumer_offsets-8 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-8 (kafka.cluster.Partition)
[2020-04-28 20:17:48,260] INFO [Partition __consumer_offsets-8 broker=0] Log loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,260] INFO [Partition __consumer_offsets-8 broker=0] __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,268] INFO [Log partition=__consumer_offsets-24, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,270] INFO [Log partition=__consumer_offsets-24, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,270] INFO Created log for partition __consumer_offsets-24 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-24 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,271] INFO [Partition __consumer_offsets-24 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-24 (kafka.cluster.Partition)
[2020-04-28 20:17:48,272] INFO [Partition __consumer_offsets-24 broker=0] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,272] INFO [Partition __consumer_offsets-24 broker=0] __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,281] INFO [Log partition=__consumer_offsets-43, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,282] INFO [Log partition=__consumer_offsets-43, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,283] INFO Created log for partition __consumer_offsets-43 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-43 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,283] INFO [Partition __consumer_offsets-43 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-43 (kafka.cluster.Partition)
[2020-04-28 20:17:48,283] INFO [Partition __consumer_offsets-43 broker=0] Log loaded for partition __consumer_offsets-43 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,283] INFO [Partition __consumer_offsets-43 broker=0] __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,293] INFO [Log partition=__consumer_offsets-5, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,294] INFO [Log partition=__consumer_offsets-5, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,295] INFO Created log for partition __consumer_offsets-5 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-5 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,296] INFO [Partition __consumer_offsets-5 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-5 (kafka.cluster.Partition)
[2020-04-28 20:17:48,296] INFO [Partition __consumer_offsets-5 broker=0] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,296] INFO [Partition __consumer_offsets-5 broker=0] __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,305] INFO [Log partition=__consumer_offsets-21, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,306] INFO [Log partition=__consumer_offsets-21, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,307] INFO Created log for partition __consumer_offsets-21 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-21 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,307] INFO [Partition __consumer_offsets-21 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-21 (kafka.cluster.Partition)
[2020-04-28 20:17:48,307] INFO [Partition __consumer_offsets-21 broker=0] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,307] INFO [Partition __consumer_offsets-21 broker=0] __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,315] INFO [Log partition=__consumer_offsets-40, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,316] INFO [Log partition=__consumer_offsets-40, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,317] INFO Created log for partition __consumer_offsets-40 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-40 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,318] INFO [Partition __consumer_offsets-40 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-40 (kafka.cluster.Partition)
[2020-04-28 20:17:48,318] INFO [Partition __consumer_offsets-40 broker=0] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,318] INFO [Partition __consumer_offsets-40 broker=0] __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,327] INFO [Log partition=__consumer_offsets-2, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,328] INFO [Log partition=__consumer_offsets-2, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,329] INFO Created log for partition __consumer_offsets-2 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-2 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,329] INFO [Partition __consumer_offsets-2 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-2 (kafka.cluster.Partition)
[2020-04-28 20:17:48,329] INFO [Partition __consumer_offsets-2 broker=0] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,330] INFO [Partition __consumer_offsets-2 broker=0] __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,339] INFO [Log partition=__consumer_offsets-37, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,340] INFO [Log partition=__consumer_offsets-37, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,341] INFO Created log for partition __consumer_offsets-37 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-37 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,341] INFO [Partition __consumer_offsets-37 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-37 (kafka.cluster.Partition)
[2020-04-28 20:17:48,341] INFO [Partition __consumer_offsets-37 broker=0] Log loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,341] INFO [Partition __consumer_offsets-37 broker=0] __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,349] INFO [Log partition=__consumer_offsets-18, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,350] INFO [Log partition=__consumer_offsets-18, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2020-04-28 20:17:48,351] INFO Created log for partition __consumer_offsets-18 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-18 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,351] INFO [Partition __consumer_offsets-18 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-18 (kafka.cluster.Partition)
[2020-04-28 20:17:48,352] INFO [Partition __consumer_offsets-18 broker=0] Log loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,352] INFO [Partition __consumer_offsets-18 broker=0] __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,361] INFO [Log partition=__consumer_offsets-34, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,362] INFO [Log partition=__consumer_offsets-34, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,362] INFO Created log for partition __consumer_offsets-34 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-34 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,363] INFO [Partition __consumer_offsets-34 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-34 (kafka.cluster.Partition)
[2020-04-28 20:17:48,363] INFO [Partition __consumer_offsets-34 broker=0] Log loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,363] INFO [Partition __consumer_offsets-34 broker=0] __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,373] INFO [Log partition=__consumer_offsets-15, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,374] INFO [Log partition=__consumer_offsets-15, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:17:48,374] INFO Created log for partition __consumer_offsets-15 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-15 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,375] INFO [Partition __consumer_offsets-15 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-15 (kafka.cluster.Partition)
[2020-04-28 20:17:48,375] INFO [Partition __consumer_offsets-15 broker=0] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,377] INFO [Partition __consumer_offsets-15 broker=0] __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,386] INFO [Log partition=__consumer_offsets-12, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,387] INFO [Log partition=__consumer_offsets-12, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,388] INFO Created log for partition __consumer_offsets-12 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-12 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,389] INFO [Partition __consumer_offsets-12 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-12 (kafka.cluster.Partition)
[2020-04-28 20:17:48,389] INFO [Partition __consumer_offsets-12 broker=0] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,389] INFO [Partition __consumer_offsets-12 broker=0] __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,396] INFO [Log partition=__consumer_offsets-31, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,398] INFO [Log partition=__consumer_offsets-31, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,399] INFO Created log for partition __consumer_offsets-31 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-31 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,399] INFO [Partition __consumer_offsets-31 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-31 (kafka.cluster.Partition)
[2020-04-28 20:17:48,400] INFO [Partition __consumer_offsets-31 broker=0] Log loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,400] INFO [Partition __consumer_offsets-31 broker=0] __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,409] INFO [Log partition=__consumer_offsets-9, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,410] INFO [Log partition=__consumer_offsets-9, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,410] INFO Created log for partition __consumer_offsets-9 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-9 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,411] INFO [Partition __consumer_offsets-9 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-9 (kafka.cluster.Partition)
[2020-04-28 20:17:48,411] INFO [Partition __consumer_offsets-9 broker=0] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,411] INFO [Partition __consumer_offsets-9 broker=0] __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,420] INFO [Log partition=__consumer_offsets-47, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,421] INFO [Log partition=__consumer_offsets-47, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,421] INFO Created log for partition __consumer_offsets-47 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-47 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,422] INFO [Partition __consumer_offsets-47 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-47 (kafka.cluster.Partition)
[2020-04-28 20:17:48,422] INFO [Partition __consumer_offsets-47 broker=0] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,423] INFO [Partition __consumer_offsets-47 broker=0] __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,432] INFO [Log partition=__consumer_offsets-19, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,433] INFO [Log partition=__consumer_offsets-19, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,434] INFO Created log for partition __consumer_offsets-19 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-19 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,434] INFO [Partition __consumer_offsets-19 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-19 (kafka.cluster.Partition)
[2020-04-28 20:17:48,434] INFO [Partition __consumer_offsets-19 broker=0] Log loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,435] INFO [Partition __consumer_offsets-19 broker=0] __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,443] INFO [Log partition=__consumer_offsets-28, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,444] INFO [Log partition=__consumer_offsets-28, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,445] INFO Created log for partition __consumer_offsets-28 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-28 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,445] INFO [Partition __consumer_offsets-28 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-28 (kafka.cluster.Partition)
[2020-04-28 20:17:48,445] INFO [Partition __consumer_offsets-28 broker=0] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,445] INFO [Partition __consumer_offsets-28 broker=0] __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,454] INFO [Log partition=__consumer_offsets-38, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,455] INFO [Log partition=__consumer_offsets-38, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,456] INFO Created log for partition __consumer_offsets-38 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-38 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,457] INFO [Partition __consumer_offsets-38 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-38 (kafka.cluster.Partition)
[2020-04-28 20:17:48,457] INFO [Partition __consumer_offsets-38 broker=0] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,457] INFO [Partition __consumer_offsets-38 broker=0] __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,467] INFO [Log partition=__consumer_offsets-35, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,468] INFO [Log partition=__consumer_offsets-35, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,469] INFO Created log for partition __consumer_offsets-35 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-35 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,470] INFO [Partition __consumer_offsets-35 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-35 (kafka.cluster.Partition)
[2020-04-28 20:17:48,472] INFO [Partition __consumer_offsets-35 broker=0] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,472] INFO [Partition __consumer_offsets-35 broker=0] __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,479] INFO [Log partition=__consumer_offsets-6, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,480] INFO [Log partition=__consumer_offsets-6, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2020-04-28 20:17:48,481] INFO Created log for partition __consumer_offsets-6 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-6 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,482] INFO [Partition __consumer_offsets-6 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-6 (kafka.cluster.Partition)
[2020-04-28 20:17:48,482] INFO [Partition __consumer_offsets-6 broker=0] Log loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,482] INFO [Partition __consumer_offsets-6 broker=0] __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,491] INFO [Log partition=__consumer_offsets-44, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,493] INFO [Log partition=__consumer_offsets-44, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,494] INFO Created log for partition __consumer_offsets-44 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-44 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,495] INFO [Partition __consumer_offsets-44 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-44 (kafka.cluster.Partition)
[2020-04-28 20:17:48,495] INFO [Partition __consumer_offsets-44 broker=0] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,495] INFO [Partition __consumer_offsets-44 broker=0] __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,504] INFO [Log partition=__consumer_offsets-25, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,506] INFO [Log partition=__consumer_offsets-25, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:17:48,506] INFO Created log for partition __consumer_offsets-25 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-25 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,507] INFO [Partition __consumer_offsets-25 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-25 (kafka.cluster.Partition)
[2020-04-28 20:17:48,507] INFO [Partition __consumer_offsets-25 broker=0] Log loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,507] INFO [Partition __consumer_offsets-25 broker=0] __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,516] INFO [Log partition=__consumer_offsets-16, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,517] INFO [Log partition=__consumer_offsets-16, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,518] INFO Created log for partition __consumer_offsets-16 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-16 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,518] INFO [Partition __consumer_offsets-16 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-16 (kafka.cluster.Partition)
[2020-04-28 20:17:48,519] INFO [Partition __consumer_offsets-16 broker=0] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,519] INFO [Partition __consumer_offsets-16 broker=0] __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,528] INFO [Log partition=__consumer_offsets-22, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,529] INFO [Log partition=__consumer_offsets-22, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,530] INFO Created log for partition __consumer_offsets-22 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-22 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,530] INFO [Partition __consumer_offsets-22 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-22 (kafka.cluster.Partition)
[2020-04-28 20:17:48,531] INFO [Partition __consumer_offsets-22 broker=0] Log loaded for partition __consumer_offsets-22 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,531] INFO [Partition __consumer_offsets-22 broker=0] __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,540] INFO [Log partition=__consumer_offsets-41, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,541] INFO [Log partition=__consumer_offsets-41, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,542] INFO Created log for partition __consumer_offsets-41 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-41 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,542] INFO [Partition __consumer_offsets-41 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-41 (kafka.cluster.Partition)
[2020-04-28 20:17:48,542] INFO [Partition __consumer_offsets-41 broker=0] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,543] INFO [Partition __consumer_offsets-41 broker=0] __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,550] INFO [Log partition=__consumer_offsets-32, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,551] INFO [Log partition=__consumer_offsets-32, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2020-04-28 20:17:48,552] INFO Created log for partition __consumer_offsets-32 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-32 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,552] INFO [Partition __consumer_offsets-32 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-32 (kafka.cluster.Partition)
[2020-04-28 20:17:48,553] INFO [Partition __consumer_offsets-32 broker=0] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,553] INFO [Partition __consumer_offsets-32 broker=0] __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,561] INFO [Log partition=__consumer_offsets-3, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,562] INFO [Log partition=__consumer_offsets-3, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-04-28 20:17:48,563] INFO Created log for partition __consumer_offsets-3 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-3 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,563] INFO [Partition __consumer_offsets-3 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-3 (kafka.cluster.Partition)
[2020-04-28 20:17:48,563] INFO [Partition __consumer_offsets-3 broker=0] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,563] INFO [Partition __consumer_offsets-3 broker=0] __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,573] INFO [Log partition=__consumer_offsets-13, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:17:48,574] INFO [Log partition=__consumer_offsets-13, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-04-28 20:17:48,574] INFO Created log for partition __consumer_offsets-13 in /mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs/__consumer_offsets-13 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-04-28 20:17:48,575] INFO [Partition __consumer_offsets-13 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-13 (kafka.cluster.Partition)
[2020-04-28 20:17:48,575] INFO [Partition __consumer_offsets-13 broker=0] Log loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:17:48,575] INFO [Partition __consumer_offsets-13 broker=0] __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:17:48,592] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-22 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,593] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,593] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-28 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,594] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,594] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-34 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,594] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,594] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-40 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,594] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,595] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-46 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,595] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,595] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,595] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-44 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,596] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,596] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,596] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-4 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,596] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,597] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-10 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,597] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,597] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-16 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,598] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-22 in 4 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,598] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,598] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,599] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,599] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-8 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,599] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,599] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,599] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,599] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-20 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,600] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,598] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-25 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,600] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,600] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,600] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-28 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,600] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,601] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-31 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,601] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,601] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-34 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,601] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-32 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,606] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-0 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,607] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-37 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,607] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,607] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-40 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,607] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,608] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,608] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-12 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,608] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,608] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,608] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,609] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-24 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,609] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,608] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-43 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,609] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,610] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-46 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,610] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,610] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-49 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,610] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-36 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,610] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-41 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,610] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,611] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-44 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,611] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,611] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-47 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,611] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,611] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-48 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,612] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-1 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,612] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-4 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,612] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-7 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,613] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-10 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,613] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-13 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,613] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-16 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,614] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-19 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,621] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-2 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,622] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-5 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,622] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-8 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,623] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-11 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,623] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-14 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,624] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-17 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,624] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-20 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,624] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-23 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,625] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-26 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,625] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-29 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,625] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-38 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,626] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-35 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,626] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-32 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,626] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-0 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,627] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-3 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,627] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-6 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,627] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-9 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,628] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-12 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,628] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-15 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,628] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-18 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,629] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-21 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,629] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-24 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,629] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-27 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,629] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-30 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,633] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-33 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,634] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-36 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,634] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-39 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,635] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-42 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,635] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-45 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:17:48,636] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-48 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:23:03,160] INFO Unable to read additional data from server sessionid 0x10000224b940001, likely server has closed socket, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:04,057] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:04,059] INFO [KafkaServer id=0] shutting down (kafka.server.KafkaServer)
[2020-04-28 20:23:04,060] INFO [KafkaServer id=0] Starting controlled shutdown (kafka.server.KafkaServer)
[2020-04-28 20:23:04,248] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:04,407] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:04,572] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:04,753] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:04,971] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:05,112] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:05,152] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:05,332] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:05,912] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:06,060] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:06,209] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:06,368] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:06,512] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:06,676] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:07,119] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:07,222] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:23:08,403] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:10,173] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:10,353] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:10,406] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:10,603] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:10,794] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:10,981] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:11,166] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:11,337] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:11,512] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:23:12,476] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:14,481] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:16,367] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:16,475] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:23:16,477] WARN config/zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:23:16,484] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:23:16,485] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:23:16,488] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:23:16,489] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:23:16,490] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:23:16,491] WARN Either no config or no quorum defined in config, running  in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
[2020-04-28 20:23:16,493] INFO Log4j found with jmx enabled. (org.apache.zookeeper.jmx.ManagedUtil)
[2020-04-28 20:23:16,507] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:23:16,508] WARN config/zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:23:16,509] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:23:16,510] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:23:16,511] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
[2020-04-28 20:23:16,514] INFO zookeeper.snapshot.trust.empty : false (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2020-04-28 20:23:16,524] INFO Server environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,524] INFO Server environment:host.name=Jarvis.localdomain (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,525] INFO Server environment:java.version=11.0.7 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,526] INFO Server environment:java.vendor=Ubuntu (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,527] INFO Server environment:java.home=/usr/lib/jvm/java-11-openjdk-amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,528] INFO Server environment:java.class.path=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/activation-1.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/aopalliance-repackaged-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-cli-1.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-basic-auth-extension-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-file-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-json-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-client-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-runtime-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-transforms-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-locator-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-core-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-databind-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-dataformat-csv-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-datatype-jdk8-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-base-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-json-provider-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-jaxb-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-paranamer-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-scala_2.12-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.activation-api-1.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.annotation-api-1.3.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.inject-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.ws.rs-api-2.1.5.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.xml.bind-api-2.3.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.26.0-GA.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-client-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-common-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-core-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-hk2-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-media-jaxb-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-server-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-client-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-continuation-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-http-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-io-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-security-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-server-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlet-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlets-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-util-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-clients-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-log4j-appender-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-examples-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-scala_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-test-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-tools-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0-sources.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/log4j-1.2.17.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/lz4-java-1.7.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/maven-artifact-3.6.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-buffer-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-codec-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-handler-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-resolver-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-epoll-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-unix-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/paranamer-2.8.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/plexus-utils-3.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/reflections-0.9.12.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/rocksdbjni-5.18.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-collection-compat_2.12-2.1.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-java8-compat_2.12-0.9.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-library-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-logging_2.12-3.9.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-reflect-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-api-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-log4j12-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/snappy-java-1.1.7.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/validation-api-2.0.1.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-jute-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zstd-jni-1.4.4-7.jar (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,531] INFO Server environment:java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,532] INFO Server environment:java.io.tmpdir=/tmp (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,533] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,533] INFO Server environment:os.name=Linux (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,534] INFO Server environment:os.arch=amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,535] INFO Server environment:os.version=4.4.0-18362-Microsoft (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,535] INFO Server environment:user.name=vision (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,538] INFO Server environment:user.home=/home/vision (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,539] INFO Server environment:user.dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,539] INFO Server environment:os.memory.free=494MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,540] INFO Server environment:os.memory.max=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,541] INFO Server environment:os.memory.total=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,542] INFO minSessionTimeout set to 6000 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,543] INFO maxSessionTimeout set to 60000 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,544] INFO Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000 datadir /tmp/zookeeper/version-2 snapdir /tmp/zookeeper/version-2 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:23:16,554] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
[2020-04-28 20:23:16,557] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 2 selector thread(s), 16 worker threads, and 64 kB direct buffers. (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2020-04-28 20:23:16,562] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2020-04-28 20:23:16,580] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
[2020-04-28 20:23:16,585] INFO Reading snapshot /tmp/zookeeper/version-2/snapshot.e8 (org.apache.zookeeper.server.persistence.FileSnap)
[2020-04-28 20:23:16,606] INFO Snapshotting: 0x109 to /tmp/zookeeper/version-2/snapshot.109 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2020-04-28 20:23:16,626] INFO Using checkIntervalMs=60000 maxPerMinute=10000 (org.apache.zookeeper.server.ContainerManager)
[2020-04-28 20:23:16,869] INFO Socket connection established, initiating session, client: /127.0.0.1:62205, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:16,886] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10000224b940001, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:16,886] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:23:16,927] INFO [KafkaServer id=0] Controlled shutdown succeeded (kafka.server.KafkaServer)
[2020-04-28 20:23:16,931] INFO [/config/changes-event-process-thread]: Shutting down (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-04-28 20:23:16,932] INFO [/config/changes-event-process-thread]: Shutdown completed (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-04-28 20:23:16,932] INFO [/config/changes-event-process-thread]: Stopped (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-04-28 20:23:16,933] INFO [SocketServer brokerId=0] Stopping socket server request processors (kafka.network.SocketServer)
[2020-04-28 20:23:16,943] INFO [SocketServer brokerId=0] Stopped socket server request processors (kafka.network.SocketServer)
[2020-04-28 20:23:16,944] INFO [data-plane Kafka Request Handler on Broker 0], shutting down (kafka.server.KafkaRequestHandlerPool)
[2020-04-28 20:23:16,947] INFO [data-plane Kafka Request Handler on Broker 0], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2020-04-28 20:23:16,952] INFO [ExpirationReaper-0-AlterAcls]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,004] INFO [ExpirationReaper-0-AlterAcls]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,004] INFO [ExpirationReaper-0-AlterAcls]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,005] INFO [KafkaApi-0] Shutdown complete. (kafka.server.KafkaApis)
[2020-04-28 20:23:17,006] INFO [ExpirationReaper-0-topic]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,093] INFO [ExpirationReaper-0-topic]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,093] INFO [ExpirationReaper-0-topic]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,095] INFO [TransactionCoordinator id=0] Shutting down. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-04-28 20:23:17,096] INFO [ProducerId Manager 0]: Shutdown complete: last producerId assigned 1000 (kafka.coordinator.transaction.ProducerIdManager)
[2020-04-28 20:23:17,097] INFO [Transaction State Manager 0]: Shutdown complete (kafka.coordinator.transaction.TransactionStateManager)
[2020-04-28 20:23:17,097] INFO [Transaction Marker Channel Manager 0]: Shutting down (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-04-28 20:23:17,097] INFO [Transaction Marker Channel Manager 0]: Stopped (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-04-28 20:23:17,097] INFO [Transaction Marker Channel Manager 0]: Shutdown completed (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-04-28 20:23:17,098] INFO [TransactionCoordinator id=0] Shutdown complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-04-28 20:23:17,099] INFO [GroupCoordinator 0]: Shutting down. (kafka.coordinator.group.GroupCoordinator)
[2020-04-28 20:23:17,100] INFO [ExpirationReaper-0-Heartbeat]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,264] INFO [ExpirationReaper-0-Heartbeat]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,264] INFO [ExpirationReaper-0-Heartbeat]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,265] INFO [ExpirationReaper-0-Rebalance]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,464] INFO [ExpirationReaper-0-Rebalance]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,464] INFO [ExpirationReaper-0-Rebalance]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,465] INFO [GroupCoordinator 0]: Shutdown complete. (kafka.coordinator.group.GroupCoordinator)
[2020-04-28 20:23:17,466] INFO [ReplicaManager broker=0] Shutting down (kafka.server.ReplicaManager)
[2020-04-28 20:23:17,467] INFO [LogDirFailureHandler]: Shutting down (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:23:17,467] INFO [LogDirFailureHandler]: Shutdown completed (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:23:17,467] INFO [LogDirFailureHandler]: Stopped (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:23:17,468] INFO [ReplicaFetcherManager on broker 0] shutting down (kafka.server.ReplicaFetcherManager)
[2020-04-28 20:23:17,469] INFO [ReplicaFetcherManager on broker 0] shutdown completed (kafka.server.ReplicaFetcherManager)
[2020-04-28 20:23:17,470] INFO [ReplicaAlterLogDirsManager on broker 0] shutting down (kafka.server.ReplicaAlterLogDirsManager)
[2020-04-28 20:23:17,470] INFO [ReplicaAlterLogDirsManager on broker 0] shutdown completed (kafka.server.ReplicaAlterLogDirsManager)
[2020-04-28 20:23:17,470] INFO [ExpirationReaper-0-Fetch]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,494] INFO [ExpirationReaper-0-Fetch]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,494] INFO [ExpirationReaper-0-Fetch]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,495] INFO [ExpirationReaper-0-Produce]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,525] INFO [ExpirationReaper-0-Produce]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,525] INFO [ExpirationReaper-0-Produce]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,526] INFO [ExpirationReaper-0-DeleteRecords]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,717] INFO [ExpirationReaper-0-DeleteRecords]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,717] INFO [ExpirationReaper-0-DeleteRecords]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,718] INFO [ExpirationReaper-0-ElectLeader]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,917] INFO [ExpirationReaper-0-ElectLeader]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,917] INFO [ExpirationReaper-0-ElectLeader]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:23:17,924] INFO [ReplicaManager broker=0] Shut down completely (kafka.server.ReplicaManager)
[2020-04-28 20:23:17,925] INFO Shutting down. (kafka.log.LogManager)
[2020-04-28 20:23:17,932] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,939] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,945] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,949] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,955] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,958] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,962] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,968] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,972] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,977] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,981] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,985] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,990] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,992] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:17,999] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,002] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,009] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,011] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,016] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,019] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,024] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,028] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,033] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,038] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,042] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,047] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,052] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,056] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,061] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,064] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,071] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,074] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,080] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,083] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,089] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,092] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,098] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,103] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,109] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,112] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,119] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,122] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,128] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,130] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,135] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,138] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,142] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,147] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,151] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,154] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,159] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,162] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,168] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,171] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,175] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,178] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,182] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,188] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,192] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,196] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,201] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,204] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,209] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,211] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,215] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,219] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,223] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,228] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,232] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,237] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,241] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,246] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,251] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,256] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,260] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,263] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,269] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,272] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,278] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,281] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,287] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,290] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,294] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,298] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,303] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,308] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,312] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,316] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,321] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,324] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,328] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,331] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,337] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,340] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,344] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,348] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,353] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,358] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,362] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,366] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,371] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,373] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,378] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,381] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,387] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,390] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,394] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:589)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:589)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,398] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:172)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:191)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:191)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:191)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:238)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:249)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:590)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:67)
	at kafka.log.LogSegment.close(LogSegment.scala:590)
	at kafka.log.Log.$anonfun$close$4(Log.scala:951)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:951)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:951)
	at kafka.log.Log.close(Log.scala:2318)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:456)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-04-28 20:23:18,420] INFO Shutdown complete. (kafka.log.LogManager)
[2020-04-28 20:23:18,427] INFO [ZooKeeperClient Kafka server] Closing. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:23:18,429] INFO Creating new log file: log.10a (org.apache.zookeeper.server.persistence.FileTxnLog)
[2020-04-28 20:23:18,544] INFO Session: 0x10000224b940001 closed (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:23:18,544] INFO EventThread shut down for session: 0x10000224b940001 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:23:18,545] INFO [ZooKeeperClient Kafka server] Closed. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:23:18,545] INFO [ThrottledChannelReaper-Fetch]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:19,050] INFO [ThrottledChannelReaper-Fetch]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:19,050] INFO [ThrottledChannelReaper-Fetch]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:19,051] INFO [ThrottledChannelReaper-Produce]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:20,048] INFO [ThrottledChannelReaper-Produce]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:20,048] INFO [ThrottledChannelReaper-Produce]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:20,049] INFO [ThrottledChannelReaper-Request]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:20,051] INFO [ThrottledChannelReaper-Request]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:20,051] INFO [ThrottledChannelReaper-Request]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:23:20,052] INFO [SocketServer brokerId=0] Shutting down socket server (kafka.network.SocketServer)
[2020-04-28 20:23:20,067] INFO [SocketServer brokerId=0] Shutdown completed (kafka.network.SocketServer)
[2020-04-28 20:23:20,070] INFO [KafkaServer id=0] shut down completed (kafka.server.KafkaServer)
[2020-04-28 20:38:36,593] INFO Reading configuration from: config/server.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:38:36,595] WARN config/server.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:38:36,596] ERROR Invalid config, exiting abnormally (org.apache.zookeeper.server.quorum.QuorumPeerMain)
org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: Error processing config/server.properties
	at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parse(QuorumPeerConfig.java:156)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:113)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:82)
Caused by: java.lang.IllegalArgumentException: dataDir is not set
	at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parseProperties(QuorumPeerConfig.java:370)
	at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parse(QuorumPeerConfig.java:152)
	... 2 more
[2020-04-28 20:39:21,792] INFO Reading configuration from: ./config/server.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:39:21,796] ERROR Invalid config, exiting abnormally (org.apache.zookeeper.server.quorum.QuorumPeerMain)
org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: Error processing ./config/server.properties
	at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parse(QuorumPeerConfig.java:156)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:113)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:82)
Caused by: java.lang.IllegalArgumentException: dataDir is not set
	at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parseProperties(QuorumPeerConfig.java:370)
	at org.apache.zookeeper.server.quorum.QuorumPeerConfig.parse(QuorumPeerConfig.java:152)
	... 2 more
[2020-04-28 20:41:12,139] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:41:12,141] WARN config/zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:41:12,147] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:41:12,148] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:41:12,152] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:41:12,153] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:41:12,154] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
[2020-04-28 20:41:12,154] WARN Either no config or no quorum defined in config, running  in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
[2020-04-28 20:41:12,156] INFO Log4j found with jmx enabled. (org.apache.zookeeper.jmx.ManagedUtil)
[2020-04-28 20:41:12,171] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:41:12,172] WARN config/zookeeper.properties is relative. Prepend ./ to indicate that you're sure! (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:41:12,173] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:41:12,173] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2020-04-28 20:41:12,174] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
[2020-04-28 20:41:12,177] INFO zookeeper.snapshot.trust.empty : false (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2020-04-28 20:41:12,187] INFO Server environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,188] INFO Server environment:host.name=Jarvis.localdomain (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,189] INFO Server environment:java.version=11.0.7 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,189] INFO Server environment:java.vendor=Ubuntu (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,191] INFO Server environment:java.home=/usr/lib/jvm/java-11-openjdk-amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,191] INFO Server environment:java.class.path=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/activation-1.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/aopalliance-repackaged-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-cli-1.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-basic-auth-extension-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-file-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-json-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-client-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-runtime-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-transforms-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-locator-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-core-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-databind-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-dataformat-csv-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-datatype-jdk8-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-base-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-json-provider-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-jaxb-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-paranamer-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-scala_2.12-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.activation-api-1.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.annotation-api-1.3.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.inject-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.ws.rs-api-2.1.5.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.xml.bind-api-2.3.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.26.0-GA.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-client-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-common-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-core-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-hk2-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-media-jaxb-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-server-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-client-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-continuation-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-http-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-io-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-security-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-server-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlet-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlets-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-util-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-clients-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-log4j-appender-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-examples-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-scala_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-test-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-tools-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0-sources.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/log4j-1.2.17.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/lz4-java-1.7.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/maven-artifact-3.6.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-buffer-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-codec-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-handler-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-resolver-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-epoll-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-unix-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/paranamer-2.8.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/plexus-utils-3.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/reflections-0.9.12.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/rocksdbjni-5.18.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-collection-compat_2.12-2.1.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-java8-compat_2.12-0.9.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-library-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-logging_2.12-3.9.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-reflect-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-api-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-log4j12-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/snappy-java-1.1.7.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/validation-api-2.0.1.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-jute-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zstd-jni-1.4.4-7.jar (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,194] INFO Server environment:java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,195] INFO Server environment:java.io.tmpdir=/tmp (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,195] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,196] INFO Server environment:os.name=Linux (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,197] INFO Server environment:os.arch=amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,198] INFO Server environment:os.version=4.4.0-18362-Microsoft (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,199] INFO Server environment:user.name=vision (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,201] INFO Server environment:user.home=/home/vision (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,201] INFO Server environment:user.dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,202] INFO Server environment:os.memory.free=494MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,203] INFO Server environment:os.memory.max=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,203] INFO Server environment:os.memory.total=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,205] INFO minSessionTimeout set to 6000 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,206] INFO maxSessionTimeout set to 60000 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,207] INFO Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000 datadir /tmp/zookeeper/version-2 snapdir /tmp/zookeeper/version-2 (org.apache.zookeeper.server.ZooKeeperServer)
[2020-04-28 20:41:12,216] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
[2020-04-28 20:41:12,220] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 2 selector thread(s), 16 worker threads, and 64 kB direct buffers. (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2020-04-28 20:41:12,225] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2020-04-28 20:41:12,241] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
[2020-04-28 20:41:12,246] INFO Reading snapshot /tmp/zookeeper/version-2/snapshot.109 (org.apache.zookeeper.server.persistence.FileSnap)
[2020-04-28 20:41:12,265] INFO Snapshotting: 0x10a to /tmp/zookeeper/version-2/snapshot.10a (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2020-04-28 20:41:12,286] INFO Using checkIntervalMs=60000 maxPerMinute=10000 (org.apache.zookeeper.server.ContainerManager)
[2020-04-28 20:41:49,658] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2020-04-28 20:41:50,059] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2020-04-28 20:41:50,095] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:41:50,099] INFO starting (kafka.server.KafkaServer)
[2020-04-28 20:41:50,100] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2020-04-28 20:41:50,117] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:41:50,124] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,124] INFO Client environment:host.name=Jarvis.localdomain (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,124] INFO Client environment:java.version=11.0.7 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,125] INFO Client environment:java.vendor=Ubuntu (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,125] INFO Client environment:java.home=/usr/lib/jvm/java-11-openjdk-amd64 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,125] INFO Client environment:java.class.path=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/activation-1.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/aopalliance-repackaged-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-cli-1.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-basic-auth-extension-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-file-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-json-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-mirror-client-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-runtime-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/connect-transforms-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-api-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-locator-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/hk2-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-core-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-databind-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-dataformat-csv-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-datatype-jdk8-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-base-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-jaxrs-json-provider-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-jaxb-annotations-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-paranamer-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jackson-module-scala_2.12-2.10.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.activation-api-1.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.annotation-api-1.3.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.inject-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.ws.rs-api-2.1.5.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jakarta.xml.bind-api-2.3.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javassist-3.26.0-GA.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-client-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-common-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-container-servlet-core-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-hk2-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-media-jaxb-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jersey-server-2.28.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-client-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-continuation-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-http-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-io-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-security-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-server-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlet-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-servlets-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jetty-util-9.4.24.v20191120.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-clients-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-log4j-appender-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-examples-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-scala_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-streams-test-utils-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka-tools-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0-sources.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/kafka_2.12-2.5.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/log4j-1.2.17.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/lz4-java-1.7.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/maven-artifact-3.6.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-buffer-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-codec-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-handler-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-resolver-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-epoll-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/netty-transport-native-unix-common-4.1.45.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/paranamer-2.8.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/plexus-utils-3.2.1.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/reflections-0.9.12.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/rocksdbjni-5.18.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-collection-compat_2.12-2.1.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-java8-compat_2.12-0.9.0.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-library-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-logging_2.12-3.9.2.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/scala-reflect-2.12.10.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-api-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/slf4j-log4j12-1.7.30.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/snappy-java-1.1.7.3.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/validation-api-2.0.1.Final.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zookeeper-jute-3.5.7.jar:/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/bin/../libs/zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,127] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,128] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,129] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,129] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,129] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,129] INFO Client environment:os.version=4.4.0-18362-Microsoft (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,130] INFO Client environment:user.name=vision (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,130] INFO Client environment:user.home=/home/vision (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,130] INFO Client environment:user.dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,130] INFO Client environment:os.memory.free=981MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,130] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,130] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,133] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@5c86dbc5 (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:41:50,137] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2020-04-28 20:41:50,144] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:41:50,148] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:41:50,153] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:41:50,162] INFO Socket connection established, initiating session, client: /127.0.0.1:55927, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:41:50,170] INFO Creating new log file: log.10b (org.apache.zookeeper.server.persistence.FileTxnLog)
[2020-04-28 20:41:50,184] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100003aa4ea0000, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:41:50,187] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:41:50,440] INFO Cluster ID = P77QLy1wRv-mpoxsp8_sIg (kafka.server.KafkaServer)
[2020-04-28 20:41:50,496] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = ./tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-04-28 20:41:50,519] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = ./tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-04-28 20:41:50,563] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:41:50,563] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:41:50,565] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:41:50,601] INFO Loading logs. (kafka.log.LogManager)
[2020-04-28 20:41:50,690] INFO [Log partition=streams-plaintext-input-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,701] INFO [Log partition=streams-plaintext-input-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 73 ms (kafka.log.Log)
[2020-04-28 20:41:50,719] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,719] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,733] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,734] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 11 ms (kafka.log.Log)
[2020-04-28 20:41:50,747] INFO [Log partition=streams-wordcount-output-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,749] INFO [Log partition=streams-wordcount-output-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
[2020-04-28 20:41:50,758] INFO [Log partition=__consumer_offsets-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,759] INFO [Log partition=__consumer_offsets-0, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,773] INFO [Log partition=__consumer_offsets-1, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,773] INFO [Log partition=__consumer_offsets-1, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,784] INFO [Log partition=__consumer_offsets-10, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,785] INFO [Log partition=__consumer_offsets-10, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,796] INFO [Log partition=__consumer_offsets-11, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,797] INFO [Log partition=__consumer_offsets-11, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 9 ms (kafka.log.Log)
[2020-04-28 20:41:50,807] INFO [Log partition=__consumer_offsets-12, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,807] INFO [Log partition=__consumer_offsets-12, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:50,818] INFO [Log partition=__consumer_offsets-13, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,819] INFO [Log partition=__consumer_offsets-13, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:50,828] INFO [Log partition=__consumer_offsets-14, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,829] INFO [Log partition=__consumer_offsets-14, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,838] INFO [Log partition=__consumer_offsets-15, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,839] INFO [Log partition=__consumer_offsets-15, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,850] INFO [Log partition=__consumer_offsets-16, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,850] INFO [Log partition=__consumer_offsets-16, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:50,858] INFO [Log partition=__consumer_offsets-17, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,860] INFO [Log partition=__consumer_offsets-17, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:50,869] INFO [Log partition=__consumer_offsets-18, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,870] INFO [Log partition=__consumer_offsets-18, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:50,878] INFO [Log partition=__consumer_offsets-19, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,879] INFO [Log partition=__consumer_offsets-19, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:50,888] INFO [Log partition=__consumer_offsets-2, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,889] INFO [Log partition=__consumer_offsets-2, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,900] INFO [Log partition=__consumer_offsets-20, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,901] INFO [Log partition=__consumer_offsets-20, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
[2020-04-28 20:41:50,908] INFO [Log partition=__consumer_offsets-21, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,909] INFO [Log partition=__consumer_offsets-21, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:50,919] INFO [Log partition=__consumer_offsets-22, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,920] INFO [Log partition=__consumer_offsets-22, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,929] INFO [Log partition=__consumer_offsets-23, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,930] INFO [Log partition=__consumer_offsets-23, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 9 ms (kafka.log.Log)
[2020-04-28 20:41:50,937] INFO [Log partition=__consumer_offsets-24, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,938] INFO [Log partition=__consumer_offsets-24, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,947] INFO [Log partition=__consumer_offsets-25, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,948] INFO [Log partition=__consumer_offsets-25, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:50,956] INFO [Log partition=__consumer_offsets-26, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,956] INFO [Log partition=__consumer_offsets-26, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:50,966] INFO [Log partition=__consumer_offsets-27, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,967] INFO [Log partition=__consumer_offsets-27, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 9 ms (kafka.log.Log)
[2020-04-28 20:41:50,974] INFO [Log partition=__consumer_offsets-28, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,976] INFO [Log partition=__consumer_offsets-28, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:50,985] INFO [Log partition=__consumer_offsets-29, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,986] INFO [Log partition=__consumer_offsets-29, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:50,994] INFO [Log partition=__consumer_offsets-3, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:50,996] INFO [Log partition=__consumer_offsets-3, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,003] INFO [Log partition=__consumer_offsets-30, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,004] INFO [Log partition=__consumer_offsets-30, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:51,012] INFO [Log partition=__consumer_offsets-31, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,013] INFO [Log partition=__consumer_offsets-31, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,021] INFO [Log partition=__consumer_offsets-32, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,022] INFO [Log partition=__consumer_offsets-32, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:51,031] INFO [Log partition=__consumer_offsets-33, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,032] INFO [Log partition=__consumer_offsets-33, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 9 ms (kafka.log.Log)
[2020-04-28 20:41:51,039] INFO [Log partition=__consumer_offsets-34, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,040] INFO [Log partition=__consumer_offsets-34, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:51,050] INFO [Log partition=__consumer_offsets-35, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,064] INFO [Log partition=__consumer_offsets-35, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 23 ms (kafka.log.Log)
[2020-04-28 20:41:51,072] INFO [Log partition=__consumer_offsets-36, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,073] INFO [Log partition=__consumer_offsets-36, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:51,082] INFO [Log partition=__consumer_offsets-37, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,083] INFO [Log partition=__consumer_offsets-37, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 9 ms (kafka.log.Log)
[2020-04-28 20:41:51,090] INFO [Log partition=__consumer_offsets-38, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,091] INFO [Log partition=__consumer_offsets-38, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:51,100] INFO [Log partition=__consumer_offsets-39, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,101] INFO [Log partition=__consumer_offsets-39, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,108] INFO [Log partition=__consumer_offsets-4, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,110] INFO [Log partition=__consumer_offsets-4, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,118] INFO [Log partition=__consumer_offsets-40, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,119] INFO [Log partition=__consumer_offsets-40, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,126] INFO [Log partition=__consumer_offsets-41, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,129] INFO [Log partition=__consumer_offsets-41, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 9 ms (kafka.log.Log)
[2020-04-28 20:41:51,136] INFO [Log partition=__consumer_offsets-42, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,137] INFO [Log partition=__consumer_offsets-42, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:51,145] INFO [Log partition=__consumer_offsets-43, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,146] INFO [Log partition=__consumer_offsets-43, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,154] INFO [Log partition=__consumer_offsets-44, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,154] INFO [Log partition=__consumer_offsets-44, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:51,162] INFO [Log partition=__consumer_offsets-45, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,163] INFO [Log partition=__consumer_offsets-45, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,170] INFO [Log partition=__consumer_offsets-46, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,171] INFO [Log partition=__consumer_offsets-46, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:51,178] INFO [Log partition=__consumer_offsets-47, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,179] INFO [Log partition=__consumer_offsets-47, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:51,187] INFO [Log partition=__consumer_offsets-48, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,187] INFO [Log partition=__consumer_offsets-48, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:51,196] INFO [Log partition=__consumer_offsets-49, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,196] INFO [Log partition=__consumer_offsets-49, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,203] INFO [Log partition=__consumer_offsets-5, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,203] INFO [Log partition=__consumer_offsets-5, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:51,211] INFO [Log partition=__consumer_offsets-6, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,212] INFO [Log partition=__consumer_offsets-6, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-04-28 20:41:51,219] INFO [Log partition=__consumer_offsets-7, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,220] INFO [Log partition=__consumer_offsets-7, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:51,227] INFO [Log partition=__consumer_offsets-8, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,228] INFO [Log partition=__consumer_offsets-8, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2020-04-28 20:41:51,235] INFO [Log partition=__consumer_offsets-9, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-04-28 20:41:51,236] INFO [Log partition=__consumer_offsets-9, dir=/mnt/d/Documents/Intern/aos/aos/kafka_2.12-2.5.0/./tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-04-28 20:41:51,238] INFO Logs loading complete in 637 ms. (kafka.log.LogManager)
[2020-04-28 20:41:51,250] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2020-04-28 20:41:51,251] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2020-04-28 20:41:51,646] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2020-04-28 20:41:51,672] INFO [SocketServer brokerId=0] Created data-plane acceptor and processors for endpoint : EndPoint(null,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2020-04-28 20:41:51,674] INFO [SocketServer brokerId=0] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2020-04-28 20:41:51,692] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:41:51,693] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:41:51,695] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:41:51,697] INFO [ExpirationReaper-0-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:41:51,708] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:41:51,748] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.zk.KafkaZkClient)
[2020-04-28 20:41:51,771] INFO Stat of the created znode at /brokers/ids/0 is: 281,281,1588120911761,1588120911761,1,0,0,72057845912829952,206,0,281
 (kafka.zk.KafkaZkClient)
[2020-04-28 20:41:51,773] INFO Registered broker 0 at path /brokers/ids/0 with addresses: ArrayBuffer(EndPoint(Jarvis.localdomain,9092,ListenerName(PLAINTEXT),PLAINTEXT)), czxid (broker epoch): 281 (kafka.zk.KafkaZkClient)
[2020-04-28 20:41:51,824] INFO [ExpirationReaper-0-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:41:51,834] INFO [ExpirationReaper-0-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:41:51,835] INFO [ExpirationReaper-0-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:41:51,915] INFO [GroupCoordinator 0]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2020-04-28 20:41:51,917] INFO [GroupCoordinator 0]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2020-04-28 20:41:51,923] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 6 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:51,940] INFO [ProducerId Manager 0]: Acquired new producerId block (brokerId:0,blockStartProducerId:2000,blockEndProducerId:2999) by writing to Zk with path version 3 (kafka.coordinator.transaction.ProducerIdManager)
[2020-04-28 20:41:51,977] INFO [TransactionCoordinator id=0] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-04-28 20:41:51,981] INFO [Transaction Marker Channel Manager 0]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-04-28 20:41:51,982] INFO [TransactionCoordinator id=0] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-04-28 20:41:52,005] INFO [ExpirationReaper-0-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:41:52,029] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-04-28 20:41:52,066] INFO [SocketServer brokerId=0] Started data-plane processors for 1 acceptors (kafka.network.SocketServer)
[2020-04-28 20:41:52,072] INFO Kafka version: 2.5.0 (org.apache.kafka.common.utils.AppInfoParser)
[2020-04-28 20:41:52,072] INFO Kafka commitId: 66563e712b0b9f84 (org.apache.kafka.common.utils.AppInfoParser)
[2020-04-28 20:41:52,073] INFO Kafka startTimeMs: 1588120912067 (org.apache.kafka.common.utils.AppInfoParser)
[2020-04-28 20:41:52,074] INFO [KafkaServer id=0] started (kafka.server.KafkaServer)
[2020-04-28 20:41:52,160] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set(streams-plaintext-input-0, __consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-8, __consumer_offsets-21, __consumer_offsets-4, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-46, streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, __consumer_offsets-25, __consumer_offsets-35, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-31, __consumer_offsets-36, __consumer_offsets-42, __consumer_offsets-3, __consumer_offsets-18, __consumer_offsets-37, __consumer_offsets-15, __consumer_offsets-24, __consumer_offsets-38, __consumer_offsets-17, __consumer_offsets-48, __consumer_offsets-19, __consumer_offsets-11, streams-wordcount-output-0, __consumer_offsets-13, __consumer_offsets-2, __consumer_offsets-43, __consumer_offsets-6, __consumer_offsets-14, streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-39, __consumer_offsets-12, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5, __consumer_offsets-26, __consumer_offsets-29, __consumer_offsets-34, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2020-04-28 20:41:52,173] INFO [Partition __consumer_offsets-0 broker=0] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,175] INFO [Partition __consumer_offsets-0 broker=0] __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,191] INFO [Partition __consumer_offsets-29 broker=0] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,192] INFO [Partition __consumer_offsets-29 broker=0] __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,198] INFO [Partition __consumer_offsets-48 broker=0] Log loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,198] INFO [Partition __consumer_offsets-48 broker=0] __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,203] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 broker=0] Log loaded for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,204] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 broker=0] streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,209] INFO [Partition __consumer_offsets-10 broker=0] Log loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,209] INFO [Partition __consumer_offsets-10 broker=0] __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,215] INFO [Partition __consumer_offsets-45 broker=0] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,215] INFO [Partition __consumer_offsets-45 broker=0] __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,221] INFO [Partition __consumer_offsets-26 broker=0] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,221] INFO [Partition __consumer_offsets-26 broker=0] __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,226] INFO [Partition streams-wordcount-output-0 broker=0] Log loaded for partition streams-wordcount-output-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,227] INFO [Partition streams-wordcount-output-0 broker=0] streams-wordcount-output-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,233] INFO [Partition __consumer_offsets-7 broker=0] Log loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,233] INFO [Partition __consumer_offsets-7 broker=0] __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,238] INFO [Partition __consumer_offsets-42 broker=0] Log loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,239] INFO [Partition __consumer_offsets-42 broker=0] __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,246] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 broker=0] Log loaded for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,246] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 broker=0] streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,252] INFO [Partition __consumer_offsets-4 broker=0] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,252] INFO [Partition __consumer_offsets-4 broker=0] __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,258] INFO [Partition __consumer_offsets-23 broker=0] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,258] INFO [Partition __consumer_offsets-23 broker=0] __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,264] INFO [Partition __consumer_offsets-1 broker=0] Log loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,265] INFO [Partition __consumer_offsets-1 broker=0] __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,271] INFO [Partition __consumer_offsets-39 broker=0] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,271] INFO [Partition __consumer_offsets-39 broker=0] __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,277] INFO [Partition __consumer_offsets-20 broker=0] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,278] INFO [Partition __consumer_offsets-20 broker=0] __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,283] INFO [Partition __consumer_offsets-17 broker=0] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,283] INFO [Partition __consumer_offsets-17 broker=0] __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,287] INFO [Partition __consumer_offsets-36 broker=0] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,288] INFO [Partition __consumer_offsets-36 broker=0] __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,293] INFO [Partition __consumer_offsets-14 broker=0] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,293] INFO [Partition __consumer_offsets-14 broker=0] __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,298] INFO [Partition __consumer_offsets-33 broker=0] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,298] INFO [Partition __consumer_offsets-33 broker=0] __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,303] INFO [Partition __consumer_offsets-49 broker=0] Log loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,303] INFO [Partition __consumer_offsets-49 broker=0] __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,309] INFO [Partition __consumer_offsets-11 broker=0] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,309] INFO [Partition __consumer_offsets-11 broker=0] __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,315] INFO [Partition __consumer_offsets-30 broker=0] Log loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,316] INFO [Partition __consumer_offsets-30 broker=0] __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,320] INFO [Partition streams-plaintext-input-0 broker=0] Log loaded for partition streams-plaintext-input-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,320] INFO [Partition streams-plaintext-input-0 broker=0] streams-plaintext-input-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,325] INFO [Partition __consumer_offsets-46 broker=0] Log loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,326] INFO [Partition __consumer_offsets-46 broker=0] __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,331] INFO [Partition __consumer_offsets-27 broker=0] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,331] INFO [Partition __consumer_offsets-27 broker=0] __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,336] INFO [Partition __consumer_offsets-8 broker=0] Log loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,336] INFO [Partition __consumer_offsets-8 broker=0] __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,341] INFO [Partition __consumer_offsets-24 broker=0] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,341] INFO [Partition __consumer_offsets-24 broker=0] __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,347] INFO [Partition __consumer_offsets-43 broker=0] Log loaded for partition __consumer_offsets-43 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,347] INFO [Partition __consumer_offsets-43 broker=0] __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,351] INFO [Partition __consumer_offsets-5 broker=0] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,352] INFO [Partition __consumer_offsets-5 broker=0] __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,357] INFO [Partition __consumer_offsets-21 broker=0] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,357] INFO [Partition __consumer_offsets-21 broker=0] __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,362] INFO [Partition __consumer_offsets-40 broker=0] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,363] INFO [Partition __consumer_offsets-40 broker=0] __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,368] INFO [Partition __consumer_offsets-2 broker=0] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,368] INFO [Partition __consumer_offsets-2 broker=0] __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,373] INFO [Partition __consumer_offsets-37 broker=0] Log loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,373] INFO [Partition __consumer_offsets-37 broker=0] __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,378] INFO [Partition __consumer_offsets-18 broker=0] Log loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,379] INFO [Partition __consumer_offsets-18 broker=0] __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,383] INFO [Partition __consumer_offsets-34 broker=0] Log loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,384] INFO [Partition __consumer_offsets-34 broker=0] __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,388] INFO [Partition __consumer_offsets-15 broker=0] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,388] INFO [Partition __consumer_offsets-15 broker=0] __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,394] INFO [Partition __consumer_offsets-12 broker=0] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,394] INFO [Partition __consumer_offsets-12 broker=0] __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,399] INFO [Partition __consumer_offsets-31 broker=0] Log loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,400] INFO [Partition __consumer_offsets-31 broker=0] __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,405] INFO [Partition __consumer_offsets-9 broker=0] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,405] INFO [Partition __consumer_offsets-9 broker=0] __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,411] INFO [Partition __consumer_offsets-47 broker=0] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,412] INFO [Partition __consumer_offsets-47 broker=0] __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,417] INFO [Partition __consumer_offsets-19 broker=0] Log loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,417] INFO [Partition __consumer_offsets-19 broker=0] __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,422] INFO [Partition __consumer_offsets-28 broker=0] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,423] INFO [Partition __consumer_offsets-28 broker=0] __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,428] INFO [Partition __consumer_offsets-38 broker=0] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,429] INFO [Partition __consumer_offsets-38 broker=0] __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,435] INFO [Partition __consumer_offsets-35 broker=0] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,435] INFO [Partition __consumer_offsets-35 broker=0] __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,440] INFO [Partition __consumer_offsets-6 broker=0] Log loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,440] INFO [Partition __consumer_offsets-6 broker=0] __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,447] INFO [Partition __consumer_offsets-44 broker=0] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,447] INFO [Partition __consumer_offsets-44 broker=0] __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,452] INFO [Partition __consumer_offsets-25 broker=0] Log loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,452] INFO [Partition __consumer_offsets-25 broker=0] __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,457] INFO [Partition __consumer_offsets-16 broker=0] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,457] INFO [Partition __consumer_offsets-16 broker=0] __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,463] INFO [Partition __consumer_offsets-22 broker=0] Log loaded for partition __consumer_offsets-22 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,464] INFO [Partition __consumer_offsets-22 broker=0] __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,469] INFO [Partition __consumer_offsets-41 broker=0] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,469] INFO [Partition __consumer_offsets-41 broker=0] __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,474] INFO [Partition __consumer_offsets-32 broker=0] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,474] INFO [Partition __consumer_offsets-32 broker=0] __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,481] INFO [Partition __consumer_offsets-3 broker=0] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,481] INFO [Partition __consumer_offsets-3 broker=0] __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,487] INFO [Partition __consumer_offsets-13 broker=0] Log loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Partition)
[2020-04-28 20:41:52,487] INFO [Partition __consumer_offsets-13 broker=0] __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-04-28 20:41:52,503] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-22 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,505] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,505] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-28 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,505] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,505] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-34 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,505] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,506] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-40 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,506] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,506] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-46 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,506] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,506] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,507] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-44 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,507] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,507] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,507] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-4 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,507] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,508] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-10 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,508] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,508] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-16 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,508] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,508] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,509] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,509] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-8 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,509] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,510] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,510] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,510] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-22 in 4 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,510] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-20 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,511] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,511] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-25 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,512] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,512] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-28 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,512] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,515] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,515] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-31 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,516] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,516] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-34 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,516] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-32 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,517] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-37 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,517] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-0 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,517] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-40 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,517] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,518] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,518] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,518] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-43 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,518] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-12 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,519] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,519] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-46 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,519] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,519] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,519] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-49 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,519] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-24 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,520] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,520] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-41 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,520] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,520] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-44 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,520] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,521] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-36 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,521] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-47 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,521] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,521] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,521] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-1 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,521] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,521] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-48 (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,522] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-4 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,522] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-7 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,522] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-10 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,523] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-13 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,523] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-16 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,526] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-19 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,527] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-2 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,528] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-5 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,528] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-8 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,529] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-11 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,529] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-14 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,530] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-17 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,530] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-20 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,531] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-23 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,532] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-26 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,532] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-29 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,533] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-38 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,533] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-35 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,534] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-32 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,544] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-0 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,545] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-3 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,546] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-6 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,547] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-9 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,547] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-12 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,548] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-15 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,548] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-18 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,549] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-21 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,549] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-24 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,550] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-27 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,550] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-30 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,550] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-33 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,551] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-36 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,551] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-39 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,551] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-42 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,552] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-45 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:41:52,552] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-48 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:51:51,927] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-04-28 20:55:16,118] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:16,120] INFO [KafkaServer id=0] shutting down (kafka.server.KafkaServer)
[2020-04-28 20:55:16,121] INFO [KafkaServer id=0] Starting controlled shutdown (kafka.server.KafkaServer)
[2020-04-28 20:55:16,142] INFO [KafkaServer id=0] Controlled shutdown succeeded (kafka.server.KafkaServer)
[2020-04-28 20:55:16,146] INFO [/config/changes-event-process-thread]: Shutting down (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-04-28 20:55:16,148] INFO [/config/changes-event-process-thread]: Stopped (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-04-28 20:55:16,148] INFO [/config/changes-event-process-thread]: Shutdown completed (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-04-28 20:55:16,149] INFO [SocketServer brokerId=0] Stopping socket server request processors (kafka.network.SocketServer)
[2020-04-28 20:55:16,157] INFO [SocketServer brokerId=0] Stopped socket server request processors (kafka.network.SocketServer)
[2020-04-28 20:55:16,158] INFO [data-plane Kafka Request Handler on Broker 0], shutting down (kafka.server.KafkaRequestHandlerPool)
[2020-04-28 20:55:16,161] INFO [data-plane Kafka Request Handler on Broker 0], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2020-04-28 20:55:16,168] INFO [ExpirationReaper-0-AlterAcls]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,285] INFO [ExpirationReaper-0-AlterAcls]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,285] INFO [ExpirationReaper-0-AlterAcls]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,287] INFO [KafkaApi-0] Shutdown complete. (kafka.server.KafkaApis)
[2020-04-28 20:55:16,288] INFO [ExpirationReaper-0-topic]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,310] INFO [ExpirationReaper-0-topic]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,310] INFO [ExpirationReaper-0-topic]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,312] INFO [TransactionCoordinator id=0] Shutting down. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-04-28 20:55:16,313] INFO [ProducerId Manager 0]: Shutdown complete: last producerId assigned 2000 (kafka.coordinator.transaction.ProducerIdManager)
[2020-04-28 20:55:16,314] INFO [Transaction State Manager 0]: Shutdown complete (kafka.coordinator.transaction.TransactionStateManager)
[2020-04-28 20:55:16,314] INFO [Transaction Marker Channel Manager 0]: Shutting down (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-04-28 20:55:16,314] INFO [Transaction Marker Channel Manager 0]: Stopped (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-04-28 20:55:16,314] INFO [Transaction Marker Channel Manager 0]: Shutdown completed (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-04-28 20:55:16,315] INFO [TransactionCoordinator id=0] Shutdown complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-04-28 20:55:16,316] INFO [GroupCoordinator 0]: Shutting down. (kafka.coordinator.group.GroupCoordinator)
[2020-04-28 20:55:16,316] INFO [ExpirationReaper-0-Heartbeat]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,399] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:16,510] INFO [ExpirationReaper-0-Heartbeat]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,510] INFO [ExpirationReaper-0-Heartbeat]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,511] INFO [ExpirationReaper-0-Rebalance]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,553] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:16,605] INFO [ExpirationReaper-0-Rebalance]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,605] INFO [ExpirationReaper-0-Rebalance]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,607] INFO [GroupCoordinator 0]: Shutdown complete. (kafka.coordinator.group.GroupCoordinator)
[2020-04-28 20:55:16,608] INFO [ReplicaManager broker=0] Shutting down (kafka.server.ReplicaManager)
[2020-04-28 20:55:16,608] INFO [LogDirFailureHandler]: Shutting down (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:55:16,609] INFO [LogDirFailureHandler]: Stopped (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:55:16,609] INFO [LogDirFailureHandler]: Shutdown completed (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-04-28 20:55:16,610] INFO [ReplicaFetcherManager on broker 0] shutting down (kafka.server.ReplicaFetcherManager)
[2020-04-28 20:55:16,611] INFO [ReplicaFetcherManager on broker 0] shutdown completed (kafka.server.ReplicaFetcherManager)
[2020-04-28 20:55:16,612] INFO [ReplicaAlterLogDirsManager on broker 0] shutting down (kafka.server.ReplicaAlterLogDirsManager)
[2020-04-28 20:55:16,612] INFO [ReplicaAlterLogDirsManager on broker 0] shutdown completed (kafka.server.ReplicaAlterLogDirsManager)
[2020-04-28 20:55:16,612] INFO [ExpirationReaper-0-Fetch]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,712] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:16,758] INFO [ExpirationReaper-0-Fetch]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,758] INFO [ExpirationReaper-0-Fetch]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,759] INFO [ExpirationReaper-0-Produce]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,867] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:16,897] INFO [ExpirationReaper-0-Produce]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,897] INFO [ExpirationReaper-0-Produce]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,898] INFO [ExpirationReaper-0-DeleteRecords]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,945] INFO [ExpirationReaper-0-DeleteRecords]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,945] INFO [ExpirationReaper-0-DeleteRecords]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,946] INFO [ExpirationReaper-0-ElectLeader]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,971] INFO [ExpirationReaper-0-ElectLeader]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,971] INFO [ExpirationReaper-0-ElectLeader]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-04-28 20:55:16,976] INFO [ReplicaManager broker=0] Shut down completely (kafka.server.ReplicaManager)
[2020-04-28 20:55:16,977] INFO Shutting down. (kafka.log.LogManager)
[2020-04-28 20:55:16,983] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:17,038] INFO Shutdown complete. (kafka.log.LogManager)
[2020-04-28 20:55:17,045] INFO [ZooKeeperClient Kafka server] Closing. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:55:17,122] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:17,154] INFO Session: 0x100003aa4ea0000 closed (org.apache.zookeeper.ZooKeeper)
[2020-04-28 20:55:17,154] INFO EventThread shut down for session: 0x100003aa4ea0000 (org.apache.zookeeper.ClientCnxn)
[2020-04-28 20:55:17,156] INFO [ZooKeeperClient Kafka server] Closed. (kafka.zookeeper.ZooKeeperClient)
[2020-04-28 20:55:17,156] INFO [ThrottledChannelReaper-Fetch]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:17,366] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:17,834] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,057] INFO [ThrottledChannelReaper-Fetch]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:18,057] INFO [ThrottledChannelReaper-Fetch]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:18,059] INFO [ThrottledChannelReaper-Produce]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:18,360] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,397] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,435] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,472] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,509] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,546] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,583] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,620] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,657] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,695] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,732] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,769] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,806] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,844] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,881] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,918] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,955] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:18,992] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:19,030] INFO Terminating process due to signal SIGINT (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-04-28 20:55:19,035] INFO [ThrottledChannelReaper-Produce]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:19,035] INFO [ThrottledChannelReaper-Produce]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:19,036] INFO [ThrottledChannelReaper-Request]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:19,038] INFO [ThrottledChannelReaper-Request]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:19,038] INFO [ThrottledChannelReaper-Request]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-04-28 20:55:19,039] INFO [SocketServer brokerId=0] Shutting down socket server (kafka.network.SocketServer)
[2020-04-28 20:55:19,054] INFO [SocketServer brokerId=0] Shutdown completed (kafka.network.SocketServer)
[2020-04-28 20:55:19,058] INFO [KafkaServer id=0] shut down completed (kafka.server.KafkaServer)
